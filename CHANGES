CHANGES

0.01    First version.
0.02    Added some code to handle html tables in html2lout; also made
        LoutParser a first class object with some parameters to influence
        its behaviour.
0.03    Improved html2lout - if multiple fonts given, choses just the last one
        and inserts Base. Insert empty objects {} in front of @B, @I etc to
        ensure they don't collide with preceeding words. Corrections to smart
        quotes applied. Now use Text::Wrap to wrap long lines. Added code to
        handle more tags.
1.00    First documented version. Improved html2lout - better table handling 
        (but still very basic). No longer puts @LP's all over the place, so
        everything comes out better, including lists. Now &entity;'s are
        converted to {@Char entity}'s. More options added to control
        commenting of handled and unhandled tags. More tags handled. Parser
        object data bugs sorted. All files now have their own pod
        documentation.
1.01    Added @CNP as an option '-cnp' for <H1> and <H2>'s which is on by
        default. Thanks to David Duffy <davidD@qimr.edu.au> for this 
        suggestion.
1.02    Added non-standard tags =title, =head3 and =head4 to pod2lout.
        pod2lout can now be used on perl scripts and modules without formality
        to produce lout from their pod alone.
1.10    Added lout2html (suggested by David Duffy).
1.11    Improved lout2html, now handles lout comments, and more tags. Still
        very alpha though.
1.12    Improved lout2html, more tags, slightly better at braces, but still
        very alpha.
1.13    Licence changed to GPL for programs and LGPL for modules.
1.14    Added mkall lout wrapper.
1.15    Many improvements to mkall - now reads the ,`all' file and converts
        .txt, .pod or .html files to .lt for each .lt found in an @Include
        statement in the `all' file. Added -verbatim option to txt2lout so you
        can now put
            =lout
            @MySymbol @PP # etc.
            =endlout
        into .txt files, as well as in-line verbatim text such as V<@B> bold,
        etc.
1.16    mkall simple `makefile' lout wrapper can now use the macro package.
        For example, I have a file which has the macro:
            %DEFINE SCENE
            @Section
                @Title {#0}
            @Begin
            @PP
            @Include {#1}
            @End @Section
            %END_DEFINE
        so in my `all' file I can write:
        SCENE[ Name of scene | lout-file.lt ]
        which is somewhat more compact and (unlike lout defs) has no
        dependency issues since its pure textual substitution. To use this
        you'll need to pick up my MacroScript package which is in the same
        place as this package.

1999/09/05  Minor corrections to pod2lout. Minor fixes.

1999/09/06  Please don't use v 1.17 (I broke lout2html and Lout.pm) - use 1.16
            or earlier or this version (1.18) or later.
            Apart from fixing, have also done some small efficiency improvements.

1999/09/11  Minor corrections.

1999/09/19  Dropped mkall from the tarball since I'm making it too specific to
            my own needs.

1999/11/15  Minor changes for CPAN.

2000/01/22  Changed html2lout to make post-conversion changes a little easier 
            (and changed lout2html a tiny bit just to match).

2000/01/23  Added xml2lout. Corrected xml2lout.

2000/01/24  Lout.pm now uses Exporter and has a tiny bit more documentation.
            Minor fixes to HTML::LoutParser.pm

2000/01/26  Improved xml2lout's lout output.

